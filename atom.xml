<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>tumi&#39;s blog</title>
  <subtitle>work for better games</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://tumi.tech/"/>
  <updated>2016-09-09T06:06:14.502Z</updated>
  <id>http://tumi.tech/</id>
  
  <author>
    <name>Charles Tumi</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>introduction_of_looknfeel</title>
    <link href="http://tumi.tech/2016/09/09/looknfeel%E7%AE%80%E4%BB%8B/"/>
    <id>http://tumi.tech/2016/09/09/looknfeel简介/</id>
    <published>2016-09-09T05:37:45.000Z</published>
    <updated>2016-09-09T06:06:14.502Z</updated>
    
    <content type="html"><![CDATA[<h1 id="looknfeel简介"><a href="#looknfeel简介" class="headerlink" title="looknfeel简介"></a>looknfeel简介</h1><blockquote>
<p>参考资料：<a href="http://static.cegui.org.uk/docs/0.7.1/fal_tut1.html" target="_blank" rel="external">http://static.cegui.org.uk/docs/0.7.1/fal_tut1.html</a></p>
</blockquote>
<p>因最近处理一个控件缩放时出了问题，一路从layout看到looknfeel，正好趁此机会了解其机制。</p>
<h2 id="1-标签"><a href="#1-标签" class="headerlink" title="1. 标签"></a>1. 标签</h2><p>looknfeel遵循xml，举一个最简单的示例如下：  </p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version = "1.0" ?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">Falagard</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">WidgetLook</span> <span class="attr">name</span> = <span class="string">"TaharezLook/Button"</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">ImagerySection</span> <span class="attr">name</span> = <span class="string">"normal_imagery"</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">ImageryComponent</span>&gt;</span></div><div class="line">				<span class="tag">&lt;<span class="name">Area</span>&gt;</span></div><div class="line">					<span class="tag">&lt;<span class="name">Dim</span> <span class="attr">type</span> = <span class="string">"LeftEdge"</span>&gt;</span><span class="tag">&lt;<span class="name">AbsoluteDim</span> <span class="attr">value</span>= <span class="string">"0"</span>/&gt;</span><span class="tag">&lt;/<span class="name">Dim</span>&gt;</span></div><div class="line">					<span class="tag">&lt;<span class="name">Dim</span> <span class="attr">type</span> = <span class="string">"TopEdge"</span>&gt;</span><span class="tag">&lt;<span class="name">AbsoluteDim</span> <span class="attr">value</span> = <span class="string">"0"</span>/&gt;</span><span class="tag">&lt;/<span class="name">Dim</span>&gt;</span></div><div class="line">					<span class="tag">&lt;<span class="name">Dim</span> <span class="attr">type</span> = <span class="string">"Width"</span>&gt;</span><span class="tag">&lt;<span class="name">UnifiedDim</span> <span class="attr">scale</span> = <span class="string">"1.0"</span>/&gt;</span><span class="tag">&lt;/<span class="name">Dim</span>&gt;</span></div><div class="line">					<span class="tag">&lt;<span class="name">Dim</span> <span class="attr">type</span> = <span class="string">"Height"</span>&gt;</span><span class="tag">&lt;<span class="name">UnifiedDim</span> <span class="attr">scale</span> = <span class="string">"1.0"</span>/&gt;</span><span class="tag">&lt;/<span class="name">Dim</span>&gt;</span></div><div class="line">				<span class="tag">&lt;/<span class="name">Area</span>&gt;</span></div><div class="line">				<span class="tag">&lt;<span class="name">Image</span> <span class="attr">imageset</span> = <span class="string">"TaharezLook"</span> <span class="attr">image</span> = <span class="string">"ButtonNormal"</span>/&gt;</span></div><div class="line">				<span class="tag">&lt;<span class="name">VertFormat</span> <span class="attr">type</span> = <span class="string">"Stretched"</span>/&gt;</span></div><div class="line">			<span class="tag">&lt;/<span class="name">ImageryComponent</span>&gt;</span></div><div class="line">		<span class="tag">&lt;/<span class="name">ImagerySection</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">ImagerySection</span> <span class="attr">name</span> = <span class="string">"label"</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">TextComponent</span>&gt;</span></div><div class="line">				<span class="tag">&lt;<span class="name">Area</span>&gt;</span></div><div class="line"></div><div class="line">				<span class="tag">&lt;/<span class="name">Area</span>&gt;</span></div><div class="line">			<span class="tag">&lt;/<span class="name">TextComponent</span>&gt;</span></div><div class="line">		<span class="tag">&lt;/<span class="name">ImagerySection</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">StateImagery</span> <span class="attr">name</span> = <span class="string">"Normal"</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">Layer</span>&gt;</span></div><div class="line">				<span class="tag">&lt;<span class="name">Section</span> <span class="attr">section</span> = <span class="string">"normal_imagery"</span>/&gt;</span></div><div class="line">				<span class="tag">&lt;<span class="name">Section</span> <span class="attr">section</span> = <span class="string">"label"</span>/&gt;</span></div><div class="line">			<span class="tag">&lt;/<span class="name">Layer</span>&gt;</span></div><div class="line">		<span class="tag">&lt;/<span class="name">StateImagery</span>&gt;</span></div><div class="line">	<span class="tag">&lt;/<span class="name">WidgetLook</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">Falagard</span>&gt;</span></div></pre></td></tr></table></figure>
<p>从上面的示例可以看出大概的层级结构，文件定义了一个Button，两种结构（或者说控件，但不太恰当）和一种状态，并使这种状态包含了这两种结构。<br>对于”normal_imgery”这种结构，需要指出他的区域Area，图片和对齐方式。整个looknfeel最有趣的部分在于Area的设置，即坐标的指定。</p>
<h2 id="2-坐标系统"><a href="#2-坐标系统" class="headerlink" title="2. 坐标系统"></a>2. 坐标系统</h2><p>一个控件区域的指定通过两种要素完成，一是坐标类型 Dim type：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">"LeftEdge", "TopEdge", "RightEdge", "BottomEdge", "Width", "Height"</div></pre></td></tr></table></figure>
<p>二是坐标数值：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">"AbsoluteDim", "UnifiedDim", "ImageDim"</div></pre></td></tr></table></figure>
<p>此外，还可以通过<strong>算术操作符</strong>指定两个坐标值的算术操作结果，甚至完成嵌套的复杂计算，但是其计算优先级只能是innermost，即由内至外进行计算。下面用官方文档中的一个示例来演示： </p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">Dim</span> <span class="attr">type</span>=<span class="string">"RightEdge"</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">UnifiedDim</span> <span class="attr">scale</span>=<span class="string">"1"</span> <span class="attr">type</span>=<span class="string">"Width"</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">DimOperator</span> <span class="attr">op</span>=<span class="string">"Subtract"</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">ImageDim</span></span></div><div class="line">				<span class="attr">imageset</span>=<span class="string">"TaharezLook"</span> <span class="attr">image</span>=<span class="string">"ButtonRightNormal"</span> <span class="attr">dimension</span>=<span class="string">"Width"</span></div><div class="line">			/&gt;</div><div class="line">		<span class="tag">&lt;/<span class="name">DimOperator</span>&gt;</span></div><div class="line">	<span class="tag">&lt;/<span class="name">UnifiedDim</span>&gt;</span>    </div><div class="line"><span class="tag">&lt;/<span class="name">Dim</span>&gt;</span></div></pre></td></tr></table></figure>
<p>该例的功能是在已经为一个大控件设置了左右两个button后，再把第三个button填补到两个按钮中间的空白区域，其LeftEdge的设置可直接使用leftButton的rightEdge，即Width,而该middleButton的rightEdge设置就需要计算出来了。计算的两个操作数分别是整个大空间的Width和rightButton的Width。</p>
<h2 id="3-小结"><a href="#3-小结" class="headerlink" title="3. 小结"></a>3. 小结</h2><p>虽说是把looknfeel的运作原理大概看了下，但其实在实际工作中，尤其是对于已经开发成型的游戏，改动它的可能性太小，所以下一步应补充了解对应的C++代码是如何与其协作的，或者说C++代码是如何利用这些配置文件来达到对控件的更灵活的控制的。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;looknfeel简介&quot;&gt;&lt;a href=&quot;#looknfeel简介&quot; class=&quot;headerlink&quot; title=&quot;looknfeel简介&quot;&gt;&lt;/a&gt;looknfeel简介&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;参考资料：&lt;a href=&quot;http://
    
    </summary>
    
    
      <category term="CEGUI" scheme="http://tumi.tech/tags/CEGUI/"/>
    
  </entry>
  
  <entry>
    <title>Say Hexo</title>
    <link href="http://tumi.tech/2016/07/26/sayhello/"/>
    <id>http://tumi.tech/2016/07/26/sayhello/</id>
    <published>2016-07-26T01:10:41.000Z</published>
    <updated>2016-07-26T02:17:58.267Z</updated>
    
    <content type="html"><![CDATA[<p>经过一番折腾，终于在Hexo安家了。总的来说，它的配置和使用比Octopress要方便一些，且目前来讲Nodejs应该比Ruby圈子更火一些吧，虽然这两个都不会用哈哈。  </p>
<p>目前来看博客系统很强大，主题丰富，对md的支持也使得版式可控性强，但还要考虑图床的问题，不过暂时还用不到，到时再说。</p>
<p>OK, Stay calm and carry on.</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;经过一番折腾，终于在Hexo安家了。总的来说，它的配置和使用比Octopress要方便一些，且目前来讲Nodejs应该比Ruby圈子更火一些吧，虽然这两个都不会用哈哈。  &lt;/p&gt;
&lt;p&gt;目前来看博客系统很强大，主题丰富，对md的支持也使得版式可控性强，但还要考虑图床的问题
    
    </summary>
    
    
      <category term="Others" scheme="http://tumi.tech/tags/Others/"/>
    
  </entry>
  
</feed>
